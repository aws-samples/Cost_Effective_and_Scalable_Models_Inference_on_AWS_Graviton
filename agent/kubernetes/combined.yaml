apiVersion: v1
kind: Secret
metadata:
  name: llm-credentials
type: Opaque
data:
  # Base64 encoded value of your API key
  # Replace with: echo -n "your-api-key" | base64
  api-key: c2stMTIzNA==  # This is "sk-1234" encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-function-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: weather-function-service
  template:
    metadata:
      labels:
        app: weather-function-service
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      containers:
      - name: weather-function-service
        image: 412381761882.dkr.ecr.us-west-2.amazonaws.com/function:latest
        ports:
        - containerPort: 8000
        env:
        - name: LLM_SERVER_URL
          value: "http://llama-cpp-cpu-lb-2137543273.us-west-2.elb.amazonaws.com/v1/chat/completions"
        - name: LLM_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-credentials
              key: api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: weather-function-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
spec:
  selector:
    app: weather-function-service
  ports:
  - port: 80
    targetPort: 8000
  type: LoadBalancer
