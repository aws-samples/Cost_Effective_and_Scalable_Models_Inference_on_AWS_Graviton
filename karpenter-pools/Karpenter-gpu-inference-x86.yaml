---
# https://karpenter.sh/docs/concepts/scheduling/
# https://karpenter.sh/docs/concepts/nodepools/
# https://github.com/awslabs/amazon-eks-ami/releases
# https://marcincuber.medium.com/amazon-eks-implementing-and-using-gpu-nodes-with-nvidia-drivers-08d50fd637fe
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: gpu-general
spec:
  limits:
    # cpu: 10
    # memory: 512Gi
    cpu: 1024
    memory: 8192Gi
    # nvidia.com/gpu: "2"
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized #or WhenEmptyOrUnderutilized
    consolidateAfter: 30s
  template:
    metadata:
      labels:
        model-inferencing: "gpu-general"
        ray-control-plane: "false"
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: gpu-general
      taints:
        - key: "model-inferencing"
          value: "gpu-general"
          effect: NoSchedule
      expireAfter: 8h
      requirements:
        # - key: karpenter.k8s.aws/instance-size
        #   operator: In
        #   values:
        #   - 4xlarge
        #   - 8xlarge
        # https://karpenter.sh/docs/reference/instance-types/#g5-family
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values:
          - g
          # - p
        - key: karpenter.k8s.aws/instance-family
          operator: In
          values: ["g5", "g6"]
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-gpu-manufacturer
          operator: In
          values: ["nvidia"]
        - key: karpenter.k8s.aws/instance-gpu-count
          operator: In
          values: ["1", "2", "4", "8"]
        # - key: "node.kubernetes.io/instance-type"
        #   operator: In
        #   values: ["p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.12xlarge", "g4dn.16xlarge"]
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: gpu-general
spec:
    kubelet:
      podsPerCore: 2
      maxPods: 20
      systemReserved:
        cpu: 500m
        memory: 900Mi
    subnetSelectorTerms:
      - tags:
          eksctl.cluster.k8s.io/v1alpha1/cluster-name: "llm-eks-cluster"
      # - id: "subnet-06cec24e5bcb56f31"
    securityGroupSelectorTerms:
      - tags:
          eksctl.cluster.k8s.io/v1alpha1/cluster-name: "llm-eks-cluster"
      # - id: "sg-08658ba17c0fe1ad0"
    # amiFamily: "AL2023"
    amiFamily: "AL2023"
    # # acquired from https://github.com/awslabs/amazon-eks-ami/releases
    # - name: "amazon-eks-gpu-node-1.30-v*"
    amiSelectorTerms:
      - name: "amazon-eks-node-al2023-x86_64-nvidia-1.30-v*"
        #alias: al2023@latest
        # name: "amazon-eks-gpu-node-1.31-v*"
        #alias: al2023@latest
        # name: "amazon-eks-node-al2023-x86_64-nvidia-560-1.30-v20241011" #"al2023-ami-minimal-2023.5.20241001.1-kernel-6.1-x86_64"
        # id : "ami-0770ab88ec35aa875"
      # - name: "amazon-eks-gpu-node-1.30-v20241011"
        # id: "ami-07c27f5bd7921bea1"
        # id: "ami-01637a5ffbb75ef5c" EKS Image for CPU
    role: eksctl-llm-eks-cluster-nodegroup-n-NodeInstanceRole-y411lzob4Y8u
    tags:
      model-inferencing: "gpu-general"
      ray-control-plane: "false"
    blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 700Gi
        volumeType: gp3
        iops: 10000
        encrypted: false
        # kmsKeyID: "1234abcd-12ab-34cd-56ef-1234567890ab"
        deleteOnTermination: true
        throughput: 512
        # snapshotID: snap-0123456789