# Dockerfile for Main Application (FastAPI Server)
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies in stages to resolve conflicts
# First install core dependencies without strands-agents-tools
RUN pip install --no-cache-dir \
    openai>=1.0.0 \
    litellm>=1.0.0 \
    mcp>=1.0.0 \
    fastmcp>=0.9.0 \
    fastapi>=0.104.0 \
    uvicorn>=0.24.0 \
    boto3>=1.34.0 \
    opensearch-py>=2.4.0 \
    aws-requests-auth>=0.4.3

# Install datasets and ragas with compatible dill version
RUN pip install --no-cache-dir \
    "dill>=0.3.0,<0.3.8" \
    "datasets==2.14.0" \
    "pyarrow>=12.0.0,<15.0.0" \
    "ragas>=0.1.0,<0.2.0"

# Install compatible langchain versions (use older langchain-aws that works with older langchain-core)
RUN pip install --no-cache-dir \
    "langchain>=0.1.0,<0.3.0" \
    "langchain-core>=0.1.0,<0.3.0" \
    "langchain-aws>=0.1.0,<0.2.0"

# Install strands packages (which will upgrade dill but should work)
RUN pip install --no-cache-dir \
    strands-agents>=0.1.0 \
    strands-agents-tools>=0.1.0 \
    "strands-agents[litellm]>=0.1.0"

# Install remaining dependencies
RUN pip install --no-cache-dir \
    "numpy>=1.24.0,<2.0.0" \
    "scikit-learn>=1.3.0" \
    "pandas>=2.0.0" \
    "python-dotenv>=1.0.0" \
    "requests>=2.31.0" \
    "httpx>=0.25.0" \
    "langfuse>=2.0.0" \
    "pydantic>=2.0.0" \
    "aiofiles>=23.0.0" \
    "python-multipart>=0.0.6"

# Copy the entire application
COPY . .

# Create necessary directories
RUN mkdir -p knowledge output logs

# Set proper permissions
RUN chmod +x scripts/*.py 2>/dev/null || true

# Copy startup and health check scripts
COPY startup-main.sh /app/startup-main.sh
COPY healthcheck-main.sh /app/healthcheck-main.sh

# Make startup and health check scripts executable
RUN chmod +x /app/startup-main.sh /app/healthcheck-main.sh

# Expose the FastAPI server port
EXPOSE 8000

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /app/healthcheck-main.sh

# Set the default command
CMD ["/app/startup-main.sh"]
